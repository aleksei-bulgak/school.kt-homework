/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package by.bulgak.playground

class Query {
    var columns: List<String> = listOf("*")
    var from: String = ""
    var orderBy: String = ""
    var limit: Int = 0

    fun isValid() {
        if(columns.isEmpty() || columns.filter { it.isBlank() }.isNotEmpty()) {
            throw Exception("List of columns for return can not be empty or has blank lines")
        }
        if(from.isBlank()) {
            throw Exception("From element can not be nul or empty")
        }
        if(orderBy.isNotBlank() && columns.filter { it.equals(orderBy) }.isEmpty()) {
            throw Exception("Specified value for ordering $orderBy is not resented in result columns $columns")
        }
        if(limit < 0) {
            throw Exception("Limit $limit should be positive integer value")
        }
    }

    fun build(): String {
        var query = columns.joinToString(prefix = "SELECT ") { it }
                .plus(" FROM ").plus(from)
        if (orderBy.isNotBlank()) query += " ORDER BY ".plus(orderBy)
        if (limit > 0) query += " LIMIT ".plus(limit)
        return query
    }
}

fun query(request: Query.() -> Unit): String? {
    val query = Query().apply(request)
    query.isValid()
    return query.build()
}